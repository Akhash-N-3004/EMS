'use client';
import{__rest as e}from"tslib";import t from"react";import{twMerge as a}from"tailwind-merge";import{ResponsiveContainer as o,PieChart as r,Pie as l,Tooltip as i}from"recharts";import{hexColors as n}from"../../../lib/hexColors.js";import{DEFAULT_COLOR as m,themeColorRange as s}from"../../../lib/theme.js";import{defaultValueFormatter as c}from"../../../lib/utils.js";import{parseLabelInput as d,parseData as p}from"./inputParser.js";import{DonutChartTooltip as u}from"./DonutChartTooltip.js";const h=t.forwardRef(((h,f)=>{const{data:w=[],category:v="value",index:y="name",colors:b=s,variant:g="donut",valueFormatter:x=c,label:A,showLabel:E=!0,showAnimation:j=!0,showTooltip:N=!0,className:C}=h,F=e(h,["data","category","index","colors","variant","valueFormatter","label","showLabel","showAnimation","showTooltip","className"]),R="donut"==g,T=d(A,x,w,v);return t.createElement("div",Object.assign({ref:f,className:a("w-full h-44",C)},F),t.createElement(o,{width:"100%",height:"100%"},t.createElement(r,null,E&&R?t.createElement("text",{x:"50%",y:"50%",textAnchor:"middle",dominantBaseline:"middle",fill:n[m]},T):null,t.createElement(l,{data:p(w,b),cx:"50%",cy:"50%",startAngle:90,endAngle:-270,innerRadius:R?"75%":"0%",outerRadius:"100%",paddingAngle:0,dataKey:v,nameKey:y,isAnimationActive:j}),N?t.createElement(i,{wrapperStyle:{outline:"none"},content:({active:e,payload:a})=>t.createElement(u,{active:e,payload:a,valueFormatter:x})}):null)))}));h.displayName="DonutChart";export{h as default};
