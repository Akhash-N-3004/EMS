'use client';
import{__rest as t}from"tslib";import e,{useState as a}from"react";import{twMerge as i}from"tailwind-merge";import{ResponsiveContainer as r,BarChart as o,CartesianGrid as l,XAxis as n,YAxis as s,Tooltip as m,Legend as c,Bar as d}from"recharts";import{constructCategoryColors as p,getYAxisDomain as h}from"../common/utils.js";import y from"../common/ChartLegend.js";import f from"../common/ChartTooltip.js";import{hexColors as v}from"../../../lib/hexColors.js";import{BaseColors as u}from"../../../lib/constants.js";import{themeColorRange as w}from"../../../lib/theme.js";import{defaultValueFormatter as x}from"../../../lib/utils.js";const g=e.forwardRef(((g,k)=>{const{data:E=[],categories:A=[],index:L,colors:b=w,valueFormatter:F=x,layout:j="horizontal",stack:S=!1,relative:z=!1,startEndOnly:C=!1,showAnimation:V=!0,showXAxis:D=!0,showYAxis:I=!0,yAxisWidth:T=56,showTooltip:G=!0,showLegend:H=!0,showGridLines:N=!0,autoMinValue:O=!1,minValue:K,maxValue:B,allowDecimals:M=!0,className:W}=g,X=t(g,["data","categories","index","colors","valueFormatter","layout","stack","relative","startEndOnly","showAnimation","showXAxis","showYAxis","yAxisWidth","showTooltip","showLegend","showGridLines","autoMinValue","minValue","maxValue","allowDecimals","className"]),[Y,R]=a(60),$=p(A,b),q=h(O,K,B);return e.createElement("div",Object.assign({ref:k,className:i("w-full h-80",W)},X),e.createElement(r,{width:"100%",height:"100%"},e.createElement(o,{data:E,stackOffset:z?"expand":"none",layout:"vertical"===j?"vertical":"horizontal"},N?e.createElement(l,{strokeDasharray:"3 3",horizontal:"vertical"!==j,vertical:"vertical"===j}):null,"vertical"!==j?e.createElement(n,{hide:!D,dataKey:L,interval:"preserveStartEnd",tick:{transform:"translate(0, 6)"},ticks:C?[E[0][L],E[E.length-1][L]]:void 0,style:{fontSize:"12px",fontFamily:"Inter; Helvetica",marginTop:"20px"},tickLine:!1,axisLine:!1}):e.createElement(n,{hide:!D,type:"number",tick:{transform:"translate(-3, 0)"},domain:q,style:{fontSize:"12px",fontFamily:"Inter; Helvetica"},tickLine:!1,axisLine:!1,tickFormatter:F,padding:{left:10,right:10},minTickGap:5,allowDecimals:M}),"vertical"!==j?e.createElement(s,{width:T,hide:!I,axisLine:!1,tickLine:!1,type:"number",domain:q,tick:{transform:"translate(-3, 0)"},style:{fontSize:"12px",fontFamily:"Inter; Helvetica"},tickFormatter:z?t=>`${(100*t).toString()} %`:F,allowDecimals:M}):e.createElement(s,{width:T,hide:!I,dataKey:L,axisLine:!1,tickLine:!1,ticks:C?[E[0][L],E[E.length-1][L]]:void 0,type:"category",interval:"preserveStartEnd",tick:{transform:"translate(0, 6)"},style:{fontSize:"12px",fontFamily:"Inter; Helvetica"}}),G?e.createElement(m,{wrapperStyle:{outline:"none"},isAnimationActive:!1,cursor:{fill:"#d1d5db",opacity:"0.15"},content:({active:t,payload:a,label:i})=>e.createElement(f,{active:t,payload:a,label:i,valueFormatter:F,categoryColors:$}),position:{y:0}}):null,H?e.createElement(c,{verticalAlign:"top",height:Y,content:({payload:t})=>y({payload:t},$,R)}):null,A.map((t=>{var a;return e.createElement(d,{key:t,name:t,type:"linear",stackId:S||z?"a":void 0,dataKey:t,fill:v[null!==(a=$.get(t))&&void 0!==a?a:u.Gray],isAnimationActive:V})})))))}));g.displayName="BarChart";export{g as default};
